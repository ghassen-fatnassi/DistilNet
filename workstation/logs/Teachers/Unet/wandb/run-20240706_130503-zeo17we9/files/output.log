Processing:   0%|                                                                                | 0/10 [00:00<?, ?it/s]
Processing:   0%|                                                                                | 0/10 [00:15<?, ?it/s]
Traceback (most recent call last):
  File "/media/gaston/gaston1/DEV/ACTIA/workstation/scripts/train.py", line 105, in <module>
    engine(teacher,train_loader,val_loader,criterion,optimizer,scheduler,accelerator)
  File "/media/gaston/gaston1/DEV/ACTIA/workstation/scripts/train.py", line 73, in engine
    epoch_train_metrics=train_step(model,train_loader,criterion,optimizer,accelerator)
  File "/media/gaston/gaston1/DEV/ACTIA/workstation/scripts/train.py", line 45, in train_step
    curr_loss=criterion(outputs, masks)
  File "/home/gaston/Documents/icreatemodels/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1532, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/gaston/Documents/icreatemodels/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1541, in _call_impl
    return forward_call(*args, **kwargs)
  File "/media/gaston/gaston1/DEV/ACTIA/workstation/scripts/loss.py", line 19, in forward
    loss = nn.functional.cross_entropy(out_mask, true_mask.argmax(dim=1),weight=self.weights, reduction='mean')
  File "/home/gaston/Documents/icreatemodels/lib/python3.10/site-packages/torch/nn/functional.py", line 3086, in cross_entropy
    return torch._C._nn.cross_entropy_loss(input, target, weight, _Reduction.get_enum(reduction), ignore_index, label_smoothing)
TypeError: cross_entropy_loss(): argument 'weight' (position 3) must be Tensor, not list
Traceback (most recent call last):
  File "/media/gaston/gaston1/DEV/ACTIA/workstation/scripts/train.py", line 105, in <module>
    engine(teacher,train_loader,val_loader,criterion,optimizer,scheduler,accelerator)
  File "/media/gaston/gaston1/DEV/ACTIA/workstation/scripts/train.py", line 73, in engine
    epoch_train_metrics=train_step(model,train_loader,criterion,optimizer,accelerator)
  File "/media/gaston/gaston1/DEV/ACTIA/workstation/scripts/train.py", line 45, in train_step
    curr_loss=criterion(outputs, masks)
  File "/home/gaston/Documents/icreatemodels/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1532, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/gaston/Documents/icreatemodels/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1541, in _call_impl
    return forward_call(*args, **kwargs)
  File "/media/gaston/gaston1/DEV/ACTIA/workstation/scripts/loss.py", line 19, in forward
    loss = nn.functional.cross_entropy(out_mask, true_mask.argmax(dim=1),weight=self.weights, reduction='mean')
  File "/home/gaston/Documents/icreatemodels/lib/python3.10/site-packages/torch/nn/functional.py", line 3086, in cross_entropy
    return torch._C._nn.cross_entropy_loss(input, target, weight, _Reduction.get_enum(reduction), ignore_index, label_smoothing)
TypeError: cross_entropy_loss(): argument 'weight' (position 3) must be Tensor, not list